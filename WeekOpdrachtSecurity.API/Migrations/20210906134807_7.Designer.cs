// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeekOpdrachtSecurity.API.DbContexts;

namespace WeekOpdrachtSecurity.API.Migrations
{
    [DbContext(typeof(WeekOpdrachtDbContext))]
    [Migration("20210906134807_7")]
    partial class _7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeekOpdrachtSecurity.API.Entities.Secret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Secrets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classification = 2,
                            Context = "Lorem Ipsum1"
                        },
                        new
                        {
                            Id = 2,
                            Classification = 1,
                            Context = "Lorem Ipsum2"
                        },
                        new
                        {
                            Id = 3,
                            Classification = 0,
                            Context = "Lorem Ipsum3"
                        },
                        new
                        {
                            Id = 4,
                            Classification = 2,
                            Context = "Lorem Ipsum4"
                        },
                        new
                        {
                            Id = 5,
                            Classification = 1,
                            Context = "Lorem Ipsum5"
                        },
                        new
                        {
                            Id = 6,
                            Classification = 0,
                            Context = "Lorem Ipsum6"
                        });
                });

            modelBuilder.Entity("WeekOpdrachtSecurity.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Privilages")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Test1",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Test1",
                            Password = "test",
                            Privilages = 0,
                            UserType = 0,
                            Username = "test"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Test2",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Test2",
                            Password = "test",
                            Privilages = 2,
                            UserType = 3,
                            Username = "test2"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Test3",
                            IsAdmin = false,
                            IsBlocked = true,
                            LastName = "Test3",
                            Password = "test",
                            Privilages = 1,
                            UserType = 1,
                            Username = "test3"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Test4",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Test4",
                            Password = "test",
                            Privilages = 0,
                            UserType = 2,
                            Username = "test4"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "Admin",
                            Password = "admin",
                            Privilages = 2,
                            UserType = 0,
                            Username = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
